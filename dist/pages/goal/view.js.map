{"version":3,"sources":["pages/goal/view.js"],"names":["Page","data","title","hasEmptyGrid","onLoad","date","Date","cur_year","getFullYear","cur_month","getMonth","weeks_ch","calculateEmptyGrids","calculateDays","setData","getThisMonthDays","year","month","getDate","getFirstDayOfWeek","UTC","getDay","firstDayOfWeek","empytGrids","i","push","days","thisMonthDays","handleCalendar","e","handle","currentTarget","dataset","newMonth","newYear","onShareAppMessage","desc","path","onReady","onShow","onHide","onUnload","onPullDownRefresh"],"mappings":"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","file":"view.js","sourcesContent":["// 获取全局应用程序实例对象\n// const app = getApp()\n\n// 创建页面实例对象\nPage({\n  /**\n   * 页面的初始数据\n   */\n  data: {\n    title: 'my',\n    hasEmptyGrid: false\n  },\n\n  /**\n   * 生命周期函数--监听页面加载\n   */\n  onLoad () {\n    // TODO: onLoad\n    const date = new Date();\n    const cur_year = date.getFullYear();\n    const cur_month = date.getMonth() + 1;\n    const weeks_ch = ['日', '一', '二', '三', '四', '五', '六'];\n    this.calculateEmptyGrids(cur_year, cur_month);\n    this.calculateDays(cur_year, cur_month);\n    this.setData({\n      cur_year,\n      cur_month,\n      weeks_ch\n    })\n  },\n\n  getThisMonthDays(year, month) {\n    return new Date(year, month, 0).getDate();\n  },\n  getFirstDayOfWeek(year, month) {\n    return new Date(Date.UTC(year, month - 1, 1)).getDay();\n  },\n  calculateEmptyGrids(year, month) {\n    const firstDayOfWeek = this.getFirstDayOfWeek(year, month);\n    let empytGrids = [];\n    if (firstDayOfWeek > 0) {\n      for (let i = 0; i < firstDayOfWeek; i++) {\n        empytGrids.push(i);\n      }\n      this.setData({\n        hasEmptyGrid: true,\n        empytGrids\n      });\n    } else {\n      this.setData({\n        hasEmptyGrid: false,\n        empytGrids: []\n      });\n    }\n  },\n  calculateDays(year, month) {\n    let days = [];\n\n    const thisMonthDays = this.getThisMonthDays(year, month);\n\n    for (let i = 1; i <= thisMonthDays; i++) {\n      days.push(i);\n    }\n\n    this.setData({\n      days\n    });\n  },\n  handleCalendar(e) {\n    const handle = e.currentTarget.dataset.handle;\n    const cur_year = this.data.cur_year;\n    const cur_month = this.data.cur_month;\n    if (handle === 'prev') {\n      let newMonth = cur_month - 1;\n      let newYear = cur_year;\n      if (newMonth < 1) {\n        newYear = cur_year - 1;\n        newMonth = 12;\n      }\n\n      this.calculateDays(newYear, newMonth);\n      this.calculateEmptyGrids(newYear, newMonth);\n\n      this.setData({\n        cur_year: newYear,\n        cur_month: newMonth\n      })\n\n    } else {\n      let newMonth = cur_month + 1;\n      let newYear = cur_year;\n      if (newMonth > 12) {\n        newYear = cur_year + 1;\n        newMonth = 1;\n      }\n\n      this.calculateDays(newYear, newMonth);\n      this.calculateEmptyGrids(newYear, newMonth);\n\n      this.setData({\n        cur_year: newYear,\n        cur_month: newMonth\n      })\n    }\n  },\n  onShareAppMessage() {\n    return {\n      title: '小程序日历',\n      desc: '还是新鲜的日历哟',\n      path: 'pages/index/index'\n    }\n  },\n\n  /**\n   * 生命周期函数--监听页面初次渲染完成\n   */\n  onReady () {\n    // TODO: onReady\n  },\n\n  /**\n   * 生命周期函数--监听页面显示\n   */\n  onShow () {\n    // TODO: onShow\n  },\n\n  /**\n   * 生命周期函数--监听页面隐藏\n   */\n  onHide () {\n    // TODO: onHide\n  },\n\n  /**\n   * 生命周期函数--监听页面卸载\n   */\n  onUnload () {\n    // TODO: onUnload\n  },\n\n  /**\n   * 页面相关事件处理函数--监听用户下拉动作\n   */\n  onPullDownRefresh () {\n    // TODO: onPullDownRefresh\n  }\n})\n"]}