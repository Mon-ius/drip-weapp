{"version":3,"sources":["app.js"],"names":["wechat","require","baidu","App","globalData","version","userInfo","getUserInfo","cb","that","wx","login","success","res","onLaunch","getLocation","then","latitude","longitude","getCityName","name","data","currentCity","replace","console","log","catch","err","error","onShow","onHide"],"mappings":"AAAA;;;;;;AAMA,MAAMA,SAASC,QAAQ,mBAAR,CAAf;AACA,MAAMC,QAAQD,QAAQ,kBAAR,CAAd;;AAGAE,IAAI;AACF;;;;AAIAC,cAAY;AACVC,aAAS,OADC;AAEVC,cAAU;AAFA,GALV;;AAUF;;;AAGAN,UAAQA,MAbN;;AAeF;;;AAGAE,SAAOA,KAlBL;;AAoBF;;;;AAICK,eAAY,UAASC,EAAT,EAAY;AACvB,QAAIC,OAAO,IAAX;AACA,QAAG,KAAKL,UAAL,CAAgBE,QAAnB,EAA4B;AAC1B,aAAOE,EAAP,IAAa,UAAb,IAA2BA,GAAG,KAAKJ,UAAL,CAAgBE,QAAnB,CAA3B;AACD,KAFD,MAEK;AACH;AACAI,SAAGC,KAAH,CAAS;AACPC,iBAAS,YAAY;AACnBF,aAAGH,WAAH,CAAe;AACbK,qBAAS,UAAUC,GAAV,EAAe;AACtBJ,mBAAKL,UAAL,CAAgBE,QAAhB,GAA2BO,IAAIP,QAA/B;AACA,qBAAOE,EAAP,IAAa,UAAb,IAA2BA,GAAGC,KAAKL,UAAL,CAAgBE,QAAnB,CAA3B;AACD;AAJY,WAAf;AAMD;AARM,OAAT;AAUD;AACF,GAzCC;AA0CFQ,aAAY;AACVd,WACGe,WADH,GAEGC,IAFH,CAEQH,OAAO;AACX,YAAM,EAAEI,QAAF,EAAYC,SAAZ,KAA0BL,GAAhC;AACA,aAAOX,MAAMiB,WAAN,CAAkBF,QAAlB,EAA4BC,SAA5B,CAAP;AACD,KALH,EAMGF,IANH,CAMQI,QAAQ;AACZ,WAAKC,IAAL,CAAUC,WAAV,GAAwBF,KAAKG,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAxB;AACAC,cAAQC,GAAR,CAAa,iBAAgB,KAAKJ,IAAL,CAAUC,WAAY,EAAnD;AACD,KATH,EAUGI,KAVH,CAUSC,OAAO;AACZ,WAAKN,IAAL,CAAUC,WAAV,GAAwB,IAAxB;AACAE,cAAQI,KAAR,CAAcD,GAAd;AACD,KAbH;AAcAH,YAAQC,GAAR,CAAY,iDAAZ;AACD,GA1DC;AA2DF;;;;AAIAI,WAAU;AACRL,YAAQC,GAAR,CAAY,+CAAZ;AACD,GAjEC;AAkEF;;;;AAIAK,WAAU;AACRN,YAAQC,GAAR,CAAY,4CAAZ;AACD;AAxEC,CAAJ","file":"app.js","sourcesContent":["/**\n * WeChat API 模块\n * @type {Object}\n * 用于将微信官方`API`封装为`Promise`方式\n * > 小程序支持以`CommonJS`规范组织代码结构\n */\nconst wechat = require('./utils/wechat.js')\nconst baidu = require('./utils/baidu.js')\n\n\nApp({\n  /**\n   * Global shared\n   * 可以定义任何成员，用于在整个应用中共享\n   */\n  globalData: {\n    version: '0.1.0',\n    userInfo: null\n  },\n\n  /**\n   * WeChat API\n   */\n  wechat: wechat,\n\n  /**\n   * WeChat API\n   */\n  baidu: baidu,\n\n  /**\n   * 生命周期函数--监听小程序初始化\n   * 当小程序初始化完成时，会触发 onLaunch（全局只触发一次）\n   */\n   getUserInfo:function(cb){\n    var that = this;\n    if(this.globalData.userInfo){\n      typeof cb == \"function\" && cb(this.globalData.userInfo)\n    }else{\n      //调用登录接口\n      wx.login({\n        success: function () {\n          wx.getUserInfo({\n            success: function (res) {\n              that.globalData.userInfo = res.userInfo;\n              typeof cb == \"function\" && cb(that.globalData.userInfo)\n            }\n          })\n        }\n      });\n    }\n  }, \n  onLaunch () {\n    wechat\n      .getLocation()\n      .then(res => {\n        const { latitude, longitude } = res\n        return baidu.getCityName(latitude, longitude)\n      })\n      .then(name => {\n        this.data.currentCity = name.replace('市', '')\n        console.log(`currentCity : ${this.data.currentCity}`)\n      })\n      .catch(err => {\n        this.data.currentCity = '北京'\n        console.error(err)\n      })\n    console.log(' ========== Application is launched ========== ')\n  },\n  /**\n   * 生命周期函数--监听小程序显示\n   * 当小程序启动，或从后台进入前台显示，会触发 onShow\n   */\n  onShow () {\n    console.log(' ========== Application is showed ========== ')\n  },\n  /**\n   * 生命周期函数--监听小程序隐藏\n   * 当小程序从前台进入后台，会触发 onHide\n   */\n  onHide () {\n    console.log(' ========== Application is hid ========== ')\n  }\n})"]}